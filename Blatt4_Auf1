import numpy as np
from matplotlib import pyplot as plt

def heaviside(x):
    return np.where(x >= 0, 1, 0)

#MLP
def mlp(input):
    #Biases and weights
    biases = np.array([-1, -2, -1, -2])
    weights = np.array([[1, 1, -1, -1], [1, -1, 1, -1]])

    #Hidden layer
    hidden_layer = heaviside(np.dot(input, weights) + biases)

    #Output
    output = np.logical_or(np.logical_and(hidden_layer[:, 0], hidden_layer[:, 1]), np.logical_and(hidden_layer[:, 2], hidden_layer[:, 3]))
    return output

#Generate points with help of region points
y = np.linspace(-1, 5, 100)
x = np.linspace(-1, 5, 100)
X, Y = np.meshgrid(x, y)
points = np.column_stack((X.flatten(), Y.flatten()))

#Classification of points (with MLP)
classifications = mlp(points)

#Region
blue_region = np.array([[0, 1], [3, 3], [3, 3], [4, 1], [4, 1], [2, 4], [2, 4], [0, 1]])
other_region = np.array([[0, 4], [0, 0], [5, 5], [5, 1], [1, 1], [4, 4]])

#Plot regions and points
plt.fill(*blue_region.T, color='blue')
plt.fill(*other_region.T, color='red')
plt.scatter(points[:, 0], points[:, 1], c=classifications, cmap='coolwarm')
plt.xlim(-1, 5)
plt.ylim(-1, 5)
plt.gca().set_aspect('equal', adjustable='box')
plt.show()

